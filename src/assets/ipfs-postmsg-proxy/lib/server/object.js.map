{"version":3,"sources":["../../src/server/object.js"],"names":["getIpfs","opts","new","pre","object","put","args","Data","get","data","links","res","map","stat","patch","addLink","rmLink","appendData","setData"],"mappings":"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","file":"object.js","sourcesContent":["import { expose } from 'postmsg-rpc'\nimport { pre, post } from 'prepost'\nimport { dagNodeToJson, preDagNodeFromJson, dagLinkToJson, preDagLinkFromJson } from '../serialization/dag'\nimport { preCidFromJson } from '../serialization/cid'\nimport { isBufferJson, bufferFromJson, preBufferFromJson, bufferToJson } from '../serialization/buffer'\n\nexport default function (getIpfs, opts) {\n  return {\n    new: expose('ipfs.object.new', pre(\n      opts.pre('object.new'),\n      post(\n        (...args) => getIpfs().object.new(...args),\n        dagNodeToJson\n      )\n    ), opts),\n    put: expose('ipfs.object.put', pre(\n      preDagNodeFromJson(0),\n      preBufferFromJson(0),\n      (...args) => {\n        if (args[0] && isBufferJson(args[0].Data)) {\n          args[0].Data = bufferFromJson(args[0].Data)\n        }\n\n        return args\n      },\n      opts.pre('object.put'),\n      post(\n        (...args) => getIpfs().object.put(...args),\n        dagNodeToJson\n      )\n    ), opts),\n    get: expose('ipfs.object.get', pre(\n      preBufferFromJson(0),\n      preCidFromJson(0),\n      opts.pre('object.get'),\n      post(\n        (...args) => getIpfs().object.get(...args),\n        dagNodeToJson\n      )\n    ), opts),\n    data: expose('ipfs.object.data', pre(\n      preBufferFromJson(0),\n      preCidFromJson(0),\n      opts.pre('object.data'),\n      post(\n        (...args) => getIpfs().object.data(...args),\n        bufferToJson\n      )\n    ), opts),\n    links: expose('ipfs.object.links', pre(\n      preBufferFromJson(0),\n      preCidFromJson(0),\n      opts.pre('object.links'),\n      post(\n        (...args) => getIpfs().object.links(...args),\n        (res) => res.map(dagLinkToJson)\n      )\n    ), opts),\n    stat: expose('ipfs.object.stat', pre(\n      preBufferFromJson(0),\n      preCidFromJson(0),\n      opts.pre('object.stat'),\n      (...args) => getIpfs().object.stat(...args)\n    ), opts),\n    patch: {\n      addLink: expose('ipfs.object.patch.addLink', pre(\n        preBufferFromJson(0),\n        preCidFromJson(0),\n        preDagLinkFromJson(1),\n        opts.pre('object.patch.addLink'),\n        post(\n          (...args) => getIpfs().object.patch.addLink(...args),\n          dagNodeToJson\n        )\n      ), opts),\n      rmLink: expose('ipfs.object.patch.rmLink', pre(\n        preBufferFromJson(0),\n        preCidFromJson(0),\n        preDagLinkFromJson(1),\n        opts.pre('object.patch.rmLink'),\n        post(\n          (...args) => getIpfs().object.patch.rmLink(...args),\n          dagNodeToJson\n        )\n      ), opts),\n      appendData: expose('ipfs.object.patch.appendData', pre(\n        preBufferFromJson(0),\n        preCidFromJson(0),\n        preBufferFromJson(1),\n        opts.pre('object.patch.appendData'),\n        post(\n          (...args) => getIpfs().object.patch.appendData(...args),\n          dagNodeToJson\n        )\n      ), opts),\n      setData: expose('ipfs.object.patch.setData', pre(\n        preBufferFromJson(0),\n        preCidFromJson(0),\n        preBufferFromJson(1),\n        opts.pre('object.patch.setData'),\n        post(\n          (...args) => getIpfs().object.patch.setData(...args),\n          dagNodeToJson\n        )\n      ), opts)\n    }\n  }\n}\n"]}